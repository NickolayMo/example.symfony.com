
security:
  # Uncomment for ACL support
  #acl:
  #  connection: default
   
  role_hierarchy:
    ROLE_ADMIN:  [ROLE_USER, ROLE_SONATA_ADMIN]
    ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    SONATA:
      - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # comment it when using acl
   
  providers:
    fos_userbundle:
      id: fos_user.user_provider.username

  encoders:
    FOS\UserBundle\Model\UserInterface: sha512

  firewalls:
    # -> custom firewall for the admin area of the URL
    admin:
      pattern:  /admin(.*)
      context:  user
      form_login:
        provider:  fos_userbundle
        login_path:  /admin/login
        use_forward:  false
        check_path:  /admin/login_check
        failure_path:  null
      logout:
        path:  /admin/logout
      anonymous:  true
    # -> end custom configuration
   
    main:
      pattern: ^/
      form_login:
        provider: fos_userbundle
        csrf_provider: form.csrf_provider
      logout:  true
      anonymous:  true
   
  access_control:
    # URL of FOSUserBundle which need to be available to anonymous users
    - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

    # Admin login page needs to be access without credential
    - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

    # Secured part of the site
    # This config requires being logged for the whole site 
    # and having the admin role for the admin part.
    # Change these rules to adapt them to your needs
    - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
    - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }





#FOS

# security:
#     encoders:
#         FOS\UserBundle\Model\UserInterface: bcrypt
#     role_hierarchy:
#         ROLE_ADMIN: ROLE_USER
#         ROLE_SUPER_ADMIN: ROLE_ADMIN
#     providers:
#         fos_userbundle:
#             id: fos_user.user_provider.username
#     firewalls:
#         main:
#             pattern: ^/
#             form_login:
#                 provider: fos_userbundle
#                 csrf_token_generator: security.csrf.token_manager
#                 # if you are using Symfony < 2.8, use the following config instead:
#                 # csrf_provider: form.csrf_provider

#             logout:       true
#             anonymous:    true

#     access_control:
#         - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/admin/, role: ROLE_ADMIN }
        
        
        
        
        
#     firewalls:
#         main:
#             anonymous: ~
#             form_login:
#                 login_path: login
#                 check_path: login
#     access_control:
#         #- {path: /login, roles: IS_AUTHENTICATED_ANONYMUSLY}
#          - {path: /admin, roles: ROLE_ADMIN}

# # security:
# #     encoders:
# #         Symfony\Components\Security\Core\User\User: plaintext
# #     role_hierarchy:
# #         ROLE_ADMIN: [ROLE_USER]
#     providers:
#         chain_provider:
#             chain:
#                 providers: [in_memory]
#         in_memory:
#             memory:
#                 users:
#                     admin: {password: adminpassword, roles: ROLE_ADMIN}
#     firewalls:
#         main:
#             pattern: /.*
#             form_login:
#                 login_path: /user/login
#                 check_path: /user/login_check
#                 default_target_path: /
#             logout:
#                 path: /user/logout
#                 target: /
#             security: true
#             anonymous: true
#     access_control:
#         - {path: /user/login, roles: IS_AUTHENTICATED_ANONYMUSLY}
#         - {path: /admin, roles: ROLE_ADMIN}
















# # To get started with security, check out the documentation:
# # http://symfony.com/doc/current/book/security.html
# security:

#     # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
#     providers:
#         in_memory:
#             memory: ~

#     firewalls:
#         # disables authentication for assets and the profiler, adapt it according to your needs
#         dev:
#             pattern: ^/(_(profiler|wdt)|css|images|js)/
#             security: false

#         main:
#             anonymous: ~
#             # activate different ways to authenticate

#             # http_basic: ~
#             # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

#             # form_login: ~
#             # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
